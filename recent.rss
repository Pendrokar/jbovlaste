% use POSIX qw(strftime);
% my $url_base = "http://jbovlaste.lojban.org";
% my $now = time();
% my $back_time = $now - (60 * 60 * 24 * $days);
% $r->content_type('application/rss+xml');
<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
  <channel>

    <title>jbovlaste</title>
    <link>http://jbovlaste.lojban.org</link>
    <description>jbovlaste recent activity</description>

%# type, word, valsiid, natlangwordid, id0, id1, content, username, time, itemid

<%perl>
my @queries = (
"SELECT 'comment' AS type,
 c.subject AS word,
 t.valsiid AS valsiid,
 d.langid AS langid,
 t.natlangwordid AS natlangwordid,
 c.commentid AS id0,
 t.definitionid AS id1,
 c.content,
 u.username,
 c.time,
 c.commentid AS itemid
 FROM comments c, threads t, users u, definitions d
 WHERE c.time > ? AND c.threadid=t.threadid AND c.userid=u.userid
 AND d.definitionid = t.definitionid
 "
,
"SELECT 'etymology' AS type,
 v.word AS word,
 e.valsiid AS valsiid,
 e.langid AS langid,
 0 AS natlangwordid, 0 AS id0, 0 AS id1,
 e.content,
 u.username,
 e.time,
 e.etymologyid AS itemid
 FROM etymology e, valsi v, users u
 WHERE e.time > ? AND e.valsiid=v.valsiid AND e.userid=u.userid"
,
"SELECT 'example' AS type,
 v.word AS word,
 e.valsiid AS valsiid,
 d.langid AS langid,
 0 AS natlangwordid, 0 AS id0, 0 AS id1,
 e.content,
 u.username,
 e.time,
 e.exampleid AS itemid
 FROM example e, valsi v, users u, definitions d
 WHERE e.time > ? AND e.valsiid=v.valsiid AND e.userid=u.userid
 AND d.definitionid = e.definitionid
 "
,
"SELECT 'definition' AS type,
 v.word AS word,
 d.valsiid AS valsiid,
 d.langid AS langid,
 0 AS natlangwordid, 0 AS id0, 0 AS id1,
 NULL AS content,
 u.username,
 d.time,
 d.definitionid AS itemid
 FROM definitions d, valsi v, users u
 WHERE d.time > ? AND d.valsiid=v.valsiid AND d.userid=u.userid"
 ,
 "SELECT 'valsi' AS type,
 v.word AS word,
 v.valsiid AS valsiid,
 0 AS langid,
 0 AS natlangwordid, 0 AS id0, 0 AS id1,
 NULL AS content,
 u.username,
 v.time,
 v.valsiid AS itemid
 FROM valsi v, users u
 WHERE v.time > ? AND v.userid=u.userid"
);

my $vq = $dbh->prepare("select word from valsi where valsiid=?");
my $nlwq = $dbh->prepare("select word,tag from natlangwords nlw, languages l where wordid=? and l.langid=nlw.langid");

my(@completeq,$completeq);
foreach my $q (@queries) {
    $q =~ s/\s+/ /g;
    # /having format problems./
    push @completeq, $q;
}
$completeq = join("\nUNION\n", @completeq);
$completeq .= "\nORDER BY time DESC";

my $query = $dbh->prepare($completeq);
$query->execute( ($back_time) x (scalar @queries) );

my $begun = 0;

while(defined(my $row = $query->fetchrow_hashref))
{
    next if $row->{'username'} eq 'officialdata';

    my $updated = strftime("%Y-%m-%dT%H:%M:%SZ", gmtime $row->{'time'});

    unless ($begun) {
        $r->headers_out->add('Last-Modified' => strftime("%a, %d %b %Y %H:%M:%S %Z", localtime($row->{'time'})));
        $begun = 1;
    }

    $m->out("<item>");

SWITCH: 
    {
	my $langreal;
	if( $row->{'langid'} )
	{
	    $langreal = " in language " .
		$dbh->selectrow_array("SELECT realname from languages where langid=?", undef, $row->{'langid'});
	} else {
	    $langreal = "";
	}

	if($row->{'type'} eq 'valsi' ||
		$row->{'type'} eq 'definition' ||
		$row->{'type'} eq 'etymology' ||
		$row->{'type'} eq 'example')
	{
            my $word = $row->{'word'};
            $m->out("<guid>$row->{'type'}-${word}-${updated}</guid>");
	    $m->out(sprintf('<title>%s "%s"%s originally created by %s</title>' . "\n", $row->{'type'},
			$word, $langreal, $row->{'username'}
			));
            $m->out(sprintf("<link>${url_base}/dict/%s</link>", $m->interp->apply_escapes($word, 'u', 'h')));
	    $m->out(sprintf(qq{<description><![CDATA[%s update by <a href="${url_base}/personal/%s">%s</a>; see <a href="${url_base}/dict/%s">%s</a>%s]]></description>} . "\n", $row->{'type'},
			$row->{'username'}, $row->{'username'},
			$word, $word, $langreal));
	    last SWITCH;
	}
	if($row->{'type'} eq 'comment') {
            my $subject = $row->{'word'};
            my @word_links = wordlink($row, $vq, $nlwq);
            $m->out("<guid>$row->{'type'}-$word_links[2]-${updated}</guid>");
	    $m->out(sprintf('<title>new comment "%s" on %s%s by %s</title>'."\n",
			$m->interp->apply_escapes($subject, 'h'),
			($word_links[2], $langreal, $row->{'username'})));
            $m->out(sprintf("<link>${url_base}/%s</link>", $m->interp->apply_escapes(&commentlink($row), 'h')));
	    $m->out(sprintf(qq{<description><![CDATA[new comment <a href="${url_base}/%s">%s</a> by <a
			href="${url_base}/personal/%s">%s</a>; see <a
			href="${url_base}/%s/%s">%s</a>%s]]></description>}."\n",
			&commentlink($row), $m->interp->apply_escapes($subject, 'h'),
			$row->{'username'}, $row->{'username'},
			@word_links, $langreal));
	    last SWITCH;
	}
	if(1) {
# default
	}
    }
    
    $m->out("</item>");
}

$query->finish;

sub commentlink {
    my $row = shift;
    my $str = "comments.html?";
    $str .= "valsi=$row->{'valsiid'};" if $row->{'valsiid'};
    $str .= "natlangword=$row->{'natlangwordid'};" if $row->{'natlangwordid'};
    $str .= sprintf('commentid=%i;definition=%i', $row->{'id0'}, $row->{'id1'});;
    return $str;
}

sub wordlink
{
    my $row = shift;
    my($vq,$nlwq) = @_;
    if($row->{'valsiid'})
    {
	$vq->execute($row->{'valsiid'});
	my $word = $vq->fetchrow_array;
	$vq->finish;
	return("dict", $word, $word);
    } else {
	$nlwq->execute($row->{'natlangwordid'});
	my($word,$lang) = $nlwq->fetchrow_array;
	$nlwq->finish;
	return("natlang/$lang", $word, $word);
    }
}

</%perl>
  </channel>
</rss>

<%init>
our($dbh);
</%init>

<%args>
$days => 7
</%args>
